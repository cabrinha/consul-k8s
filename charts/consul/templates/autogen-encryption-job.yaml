{{- if (or (and (ne (.Values.server.enabled | toString) "-") .Values.server.enabled) (and (eq (.Values.server.enabled | toString) "-") .Values.global.enabled)) }}
{{- if (and .Values.global.tls.enabled (not .Values.server.serverCert.secretName)) }}
# autogenerate encryption key for gossip protocol and save in Kubernetes secrets
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "consul.fullname" . }}-autogen-encryption
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy":  hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "consul.fullname" . }}-autogen-encryption
      labels:
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        release: {{ .Release.Name }}
        component: autogen-encryption
# NOTE: unsure if I should delete this annotation
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "consul.fullname" . }}-autogen-encryption
      {{- if (and .Values.global.gossipEncryption.secretName .Values.global.gossipEncryption.secretKey) }}
# NOTE: are there any volumes I will need? 
      {{- end }}
      containers:
        - name: autogen-encryption
          image: "{{ .Values.global.imageK8S }}"
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          workingDir: /tmp
          command:
            - "/bin/sh"
            - "-ec"
# NOTE: this should generate the key using Consul and then use curl to add it to K8s
            - |
              key=$(consul keygen) # TODO: get consul into this container
              echo $key > key.txt
# TODO: yeet this into k8s with curl
          {{- if (and .Values.global.gossipEncryption.secretName .Values.global.gossipEncryption.secretKey) }}
# NOTE: are there any volumeMounts I will need? 
          {{- end }}
# NOTE: no idea what resources I will need from the node. This is just copied from ./tls-init-job.yaml
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "50Mi"
              cpu: "50m"
{{- end }}
{{- end }}
